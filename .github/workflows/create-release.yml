on: [push]
#on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

jobs:
  build-server:
    name: Build Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: -p pabitell-cli --all-features --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: pabitell-cli
          path: target/release/pabitell-cli

  build-root:
    name: Build web root
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pabitell-root

    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          submodules: true

      - name: Install stable wasm toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install trunk to compile pabitell-root
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --locked trunk

      - name: Build pabitell-root
        run:
          trunk build --release

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: pabitell-root
          path: pabitell-root/dist


  build-stories:
    name: Build stories
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - story_dir: doggie_and_kitie/cake
            story_slug: doggie_and_kitie-cake
          - story_dir: doggie_and_kitie/doll
            story_slug: doggie_and_kitie-doll
    defaults:
      run:
        working-directory: stories/${{ matrix.story_dir }}/

    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          submodules: true

      - name: Install stable wasm toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true

      - name: Install trunk to compile story
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --locked trunk

      - name: Prepare the directory structure
        run:
          mkdir -p dist/${{ matrix.story_dir }}

      - name: Build sources using trunk
        run:
          trunk build --release --public-url ${{ matrix.story_dir }} --dist dist/${{ matrix.story_dir }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.story_slug }}
          path: stories/${{ matrix.story_dir }}/dist


  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: ['build-server', 'build-stories']

    steps:
      - name: Download pabitell-cli
        uses: actions/download-artifact@v1
        with:
          name: pabitell-cli
          path: pabitell-cli

      - name: Download pabitell-root
        uses: actions/download-artifact@v1
        with:
          name: pabitell-root
          path: pabitell-static

      - name: Download doggie_and_kitie/cake story
        uses: actions/download-artifact@v1
        with:
          name: doggie_and_kitie-cake
          path: pabitell-static

      - name: Download doggie_and_kitie/doll story
        uses: actions/download-artifact@v1
        with:
          name: doggie_and_kitie-doll
          path: pabitell-static

      - name: Pack static
        run:
          tar czf pabitell-static.tar.gz pabitell-static

      - name: Get description
        id: get_description
        run: echo "##[set-output name=tag_description;]$(git tag -l --format='%(contents:body)' ${{ github.ref }})"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "${{ steps.get_description.outputs.description }}"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pabitell-static.tar.gz
          asset_name: pabitell-static.tar.gz
          asset_content_type: application/bin

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: pabitell-cli/pabitell-cli
          asset_name: pabitell-cli
          asset_content_type: application/bin
